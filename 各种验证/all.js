//概念请移步
//https://mubu.com/doc/KVtpgYgcGP
//校验数字
//数字：
var num = /^[0-9]*$/;
// n位的数字：
var num = /^\d{n}$/;
// 至少n位的数字：
var num = /^\d{n,}$/;
// m-n位的数字：
var num = /^\d{m,n}$/;
// 零和非零开头的数字：
var num = /^(0|[1-9][0-9]*)$/;
// 非零开头的最多带两位小数的数字：
var num = /^([1-9][0-9]*)+(\.[0-9]{1,2})?$/;
// 带1-2位小数的正数或负数：
var num = /^(\-)?\d+(\.\d{1,2})$/;
// 正数、负数、和小数：
var num = /^(\-|\+)?\d+(\.\d+)?$/;
// 有两位小数的正实数：
var num = /^[0-9]+(\.[0-9]{2})?$/;
// 有1~3位小数的正实数：
var num = /^[0-9]+(\.[0-9]{1,3})?$/;
// 非零的正整数：
var num = /^[1-9]\d*$/;
// 或 
var num = /^([1-9][0-9]*){1,3}$/;
// 或 
var num = /^\+?[1-9][0-9]*$/;
// 非零的负整数：
var num = /^\-[1-9][0-9]*$/;
// 或 
var num = /^-[1-9]\d*$/;
// 非负整数：
var num = /^\d+$/;
// 或 
var num = /^[1-9]\d*|0$/;
// 非正整数：
var num = /^-[1-9]\d*|0$/;
// 或 
var num = /^((-\d+)|(0+))$/;
// 非负浮点数：
var num = /^\d+(\.\d+)?$/;
// 或 
var num = /^[1-9]\d*\.\d*|0\.\d*[1-9]\d*|0?\.0+|0$/;
// 非正浮点数：
var num = /^((-\d+(\.\d+)?)|(0+(\.0+)?))$/;
// 或 
var num = /^(-([1-9]\d*\.\d*|0\.\d*[1-9]\d*))|0?\.0+|0$/;
// 正浮点数：
var num = /^[1-9]\d*\.\d*|0\.\d*[1-9]\d*$/;
// 或 
var num = /^(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*))$/;
// 负浮点数：
var num = /^-([1-9]\d*\.\d*|0\.\d*[1-9]\d*)$/;
// 或 
var num = /^(-(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*)))$/;
// 浮点数：
var num = /^(-?\d+)(\.\d+)?$ 或 ^-?([1-9]\d*\.\d*|0\.\d*[1-9]\d*|0?\.0+|0)$/;

//校验字符的表达式
// 汉字：
var str = /^[\u4e00-\u9fa5]{0,}$/;
// 英文和数字：
var str = /^[A-Za-z0-9]+$/;
// 或 
var str = /^[A-Za-z0-9]{4,40}$/;
// 长度为3-20的所有字符：
var str = /^.{3,20}$/;
// 由26个英文字母组成的字符串：
var str = /^[A-Za-z]+$/;
// 由26个大写英文字母组成的字符串：
var str = /^[A-Z]+$/;
// 由26个小写英文字母组成的字符串：
var str = /^[a-z]+$/;
// 由数字和26个英文字母组成的字符串：
var str = /^[A-Za-z0-9]+$/;
// 由数字、26个英文字母或者下划线组成的字符串：
var str = /^\w+$ 或 ^\w{3,20}$/;
// 中文、英文、数字包括下划线：
var str = /^[\u4E00-\u9FA5A-Za-z0-9_]+$/;
// 中文、英文、数字但不包括下划线等符号：
var str = /^[\u4E00-\u9FA5A-Za-z0-9]+$/;
// 或 
var str = /^[\u4E00-\u9FA5A-Za-z0-9]{2,20}$/;
// 可以输入含有^%&',;=?$\"等字符：
var str = /[^%&',;=?$\x22]+/;
// 禁止输入含有~的字符：
var str = /[^~\x22]+/;

// 特殊需求表达式
// Email地址：
var email = /^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$/;
// 域名：
var domainName = /[a-zA-Z0-9][-a-zA-Z0-9]{0,62}(\.[a-zA-Z0-9][-a-zA-Z0-9]{0,62})+\.?/;
// InternetURL：由于vscode的自动格式对齐，使用时请删除下行空格间的 /; 
var InternetURL = /[a-zA-z]+:  /; //[^\s]*/;
// 或 
var InternetURL = /^http:  /; //([\w-]+\.)+[\w-]+(/[\w-./?%&=]*)?$/;
// 手机号码（简单版）：
var cellPhoneNumber = /^1(3|4|5|6|7|8|9)\d{9}$/;
// 手机号码（复杂版）：
var cellPhoneNumber = /^(13[0-9]|14[5|7]|15[0|1|2|3|4|5|6|7|8|9]|18[0|1|2|3|5|6|7|8|9])\d{8}$/;
// 电话号码("XXX-XXXXXXX"、"XXXX-XXXXXXXX"、"XXX-XXXXXXX"、"XXX-XXXXXXXX"、"XXXXXXX"和"XXXXXXXX)：
var telephoneNumber = /^(\(\d{3,4}-)|\d{3.4}-)?\d{7,8}$/;
// 国内电话号码(0511-4405222、021-87888822)：
var telephoneNumberCN = /\d{3}-\d{8}|\d{4}-\d{7}/;
// 身份证号(15位、18位数字)，最后一位是校验位，可能为数字或字符X：
var IDCard = /(^\d{15}$)|(^\d{18}$)|(^\d{17}(\d|X|x)$)/;
// 帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：
var accountNumber = /^[a-zA-Z][a-zA-Z0-9_]{4,15}$/;
// 密码(以字母开头，长度在6~18之间，只能包含字母、数字和下划线)：
var password = /^[a-zA-Z]\w{5,17}$/;
// 强密码(必须包含大小写字母和数字的组合，不能使用特殊字符，长度在 8-10 之间)：
var strongPassword = /^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{8,10}$/;
// 强密码(必须包含大小写字母和数字的组合，可以使用特殊字符，长度在8-10之间)：
var strongPassword = /^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,10}$/;
// 日期格式：
var date = /^\d{4}-\d{1,2}-\d{1,2}/;
// 一年的12个月(01～09和1～12)：
var month = /^(0?[1-9]|1[0-2])$/;
// 一个月的31天(01～09和1～31)：
var day = /^((0?[1-9])|((1|2)[0-9])|30|31)$/;
// 钱的输入格式：
// 有四种钱的表示形式我们可以接受:"10000.00" 和 "10,000.00", 和没有 "分" 的 "10000" 和 "10,000"：
var money = /^[1-9][0-9]*$/;
// 这表示任意一个不以0开头的数字,但是,这也意味着一个字符"0"不通过,所以我们采用下面的形式：
var money = /^(0|[1-9][0-9]*)$/;
// 一个0或者一个不以0开头的数字.我们还可以允许开头有一个负号：
var money = /^(0|-?[1-9][0-9]*)$/;
// 这表示一个0或者一个可能为负的开头不为0的数字.让用户以0开头好了.把负号的也去掉,因为钱总不能是负的吧。下面我们要加的是说明可能的小数部分：
var money = /^[0-9]+(.[0-9]+)?$/;
// 必须说明的是,小数点后面至少应该有1位数,所以"10."是不通过的,但是 "10" 和 "10.2" 是通过的：
var money = /^[0-9]+(.[0-9]{2})?$/;
// 这样我们规定小数点后面必须有两位,如果你认为太苛刻了,可以这样：
var money = /^[0-9]+(.[0-9]{1,2})?$/;
// 这样就允许用户只写一位小数.下面我们该考虑数字中的逗号了,我们可以这样：
var money = /^[0-9]{1,3}(,[0-9]{3})*(.[0-9]{1,2})?$/;
// 1到3个数字,后面跟着任意个 逗号+3个数字,逗号成为可选,而不是必须：
var money = /^([0-9]+|[0-9]{1,3}(,[0-9]{3})*)(.[0-9]{1,2})?$/;
// 备注：这就是最终结果了,别忘了"+"可以用"*"替代如果你觉得空字符串也可以接受的话(奇怪,为什么?)最后,别忘了在用函数时去掉去掉那个反斜杠,一般的错误都在这里
// xml文件：
var xmlFile = /^([a-zA-Z]+-?)+[a-zA-Z0-9]+\\.[x|X][m|M][l|L]$/;
// 中文字符的正则表达式：
var charCN = /[\u4e00-\u9fa5]/;
// 双字节字符： (包括汉字在内，可以用来计算字符串的长度(一个双字节字符长度计2，ASCII字符计1))
var doubleChar = /[^\x00-\xff]/;
// 空白行的正则表达式： (可以用来删除空白行)
var blankLine = /\n\s*\r/;
// HTML标记的正则表达式：（使用时要把 / 后边的 ; // 删掉，再后边的不要动） 
var htmlMark = /<(\S*?)[^>]*>.*?|<.*? /; // >  /;
//首尾空白字符的正则表达式：(可以用来删除行首行尾的空白字符(包括空格、制表符、换页符等等)，非常有用的表达式)使用时只取/**/即可
var htmlMark = /* /^\s*|\s*$或(^\s*)|(\s*$/; */ 1;
// 腾讯QQ号：(腾讯QQ号从10000开始)
var QQID = /[1-9][0-9]{4,}/;
// 中国邮政编码： (中国邮政编码为6位数字)
var postalCode = /[1-9]\d{5}(?!\d)/;
// IP地址：
var IPAddress = /((?:(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d))/;

//具体使用方法
/*
<form action="">
　　输入：<input type="text" name="mazey" id="mazey" placeholder="请输入邮箱">
　　<input type="button" value="验证" onclick="check();">
</form>

<script>
function check(){
　　var reg = /^\w+((.\w+)|(-\w+))@[A-Za-z0-9]+((.|-)[A-Za-z0-9]+).[A-Za-z0-9]+$/; //正则表达式
　　var obj = document.getElementById("mazey"); //要验证的对象
　　if(obj.value === ""){ //输入不能为空
　　　　alert("输入不能为空!");
　　　　return false;
　　}else if(!reg.test(obj.value)){ //正则验证不通过，格式不对
　　　　alert("验证不通过!");
　　　　return false;
　　}else{
　　　　alert("通过！");
　　　　return true;
　　}
}
</script> 
*/


//推荐一个一致性、模块化、高性能的 JavaScript 实用工具库。
//https://www.lodashjs.com/docs/lodash.join